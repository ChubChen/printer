/**
 * Created by w44 on 15-3-5.
 */

var CronJob = require("cron").CronJob;
var async = require('async');


var nodePlatAssist = require('print_assist').nodePlatAssist;
var uuid = require('node-uuid');

var cons = require('print_constants');
var terminalCons = cons.terminalCons;
var nodePlatCons = cons.nodePlatCons;

var util = require('print_util');
var mongoDBUtil = util.mongoDBUtil;
var log = util.log;

var memory = require('print_memory');
var terminalArray = memory.terminalArray;
var webIo = memory.webIo;

var fs = require('fs');
var moment = require('moment');


var BonusControl = function () {
};


/**
 * 根据终端机id兑奖
 * @param terminalId
 * 1.从数组中获取终端机对象
 * 2.从数据库中获取所有票
 * 3.发送请求
 */

BonusControl.prototype.run = function () {

    var self = this;
    //开启查询平台期次是否开奖任务
    self.dealWithBonus.start();
    //开启兑奖任务
    //self.bonusTickets.start();
    //开启FTP文件获取任务
    self.getFTPBounsTickets.start();

};

BonusControl.prototype.getFTPBounsTickets = new CronJob('0 */2 * * * *', function () {
    log.error('*******兑奖****** ftp任务');
    mongoDBUtil.db.collection('WaitBonusTerms', {safe: true}, function (err, waitBonusTerms) {
        waitBonusTerms.find({status: 1100}).toArray(function (err, _bonusTerm) {
            async.eachSeries(_bonusTerm, function (term,termCallBack) {
                log.error('正在处理兑奖期次票：'+JSON.stringify(term));
                waitBonusTerms.update({_id: term._id}, {$set: {status: 1200}}, {multi: true}, function () {
                    mongoDBUtil.db.collection('TerminalPrintSuccess', {safe: true}, function (err, collection) {
                        mongoDBUtil.db.collection('History', {safe: true}, function (err, coll) {
                            mongoDBUtil.db.collection('wrongTicket', {safe: true}, function (err, wrong) {
                                mongoDBUtil.db.collection('TicketsWaitBonus', {safe: true}, function (err, ticketsWaitBonus) {
                                    var ftps = new Array();
                                    for (var i = 0; i < 6; i++) {
                                        ftps.push(i)
                                    };
                                    async.eachSeries(ftps, function (index, _callback) {
                                        var name = term.gameCode + '/' + moment().format('YYYYMMDD') + '/' + term.termCode + '/' + term.gameCode + '_' + term.termCode + '_'+index+'.txt';
                                        var now = new Date().getTime();
                                        log.error(terminalCons.ftpTicketFileDir + name);
                                        fs.readFile(terminalCons.ftpTicketFileDir + name, 'UTF-8', function (err, data) {
                                            console.log('---'+name);
                                            if (!err) {
                                                log.error(data);
                                                var arr = data.split('\n');
                                                async.eachSeries(arr, function (item, fileReadCall) {
                                                    try {
                                                        if (item.trim() != '') {
                                                            //todo 此处应判断当前库中是否有这张票,然后再做进一步操作
                                                            //5@2ad27e577d504423bb9c258abeaa1291@600@[{"bonus":600,"bonusBeforeTax":600,"level":2,"count":1}]@600@15007@01,02,03,04,05@1200
                                                            var strArr = item.split('@');
                                                            var id = strArr[0];
                                                            var length = 32 - (id + '').length;
                                                            for (var i = 0; i < length; i++) {
                                                                id = '0' + id;
                                                            }
                                                            var bonus = strArr[2];
                                                            collection.findAndRemove({id: id}, [], function (err, ticket) {
                                                                if (ticket) {
                                                                    delete ticket['_id'];
                                                                    ticket.bonus = bonus;
                                                                    ticket.bonusTime = now;
                                                                    ticketsWaitBonus.insert(ticket, function () {
                                                                        log.info(ticket.id + '已进入兑奖库');
                                                                        fileReadCall(null);
                                                                    });
                                                                } else {
                                                                    //找不到票,到历史库中找
                                                                    coll.findOne({id: id}, function (err, _tic) {
                                                                        if (!_tic) {
                                                                            //todo 找不到文件,入错票库
                                                                            wrong.insert({id: id, bonus: item}, function () {
                                                                                log.info('找不到' + id);
                                                                                fileReadCall(null);
                                                                            })
                                                                        } else {
                                                                            log.info(id + '已兑过奖!');
                                                                            fileReadCall(null);
                                                                        }
                                                                    })
                                                                }
                                                            })
                                                        }
                                                        ;
                                                    } catch (err) {
                                                        log.info('已出错');
                                                        log.info(item);
                                                        fileReadCall(null);
                                                    }
                                                }, function (err) {
                                                    _callback(null);
                                                })
                                            }else{
                                                _callback(null);
                                            };
                                        });
                                    }, function (err) {
                                        log.error('已将中奖票导入待兑奖队列，现将未中奖票的导入历史库中...');
                                        collection.find({gameCode: term.gameCode, termCode: term.termCode}).toArray(function (err, tickets) {
                                            async.each(tickets, function (ticket, hisBackCall) {
                                                delete ticket['_id'];
                                                coll.insert(ticket, function () {
                                                    log.info(ticket.id + '未中奖，已进入历史库');
                                                    hisBackCall(null);
                                                });
                                            }, function (err) {
                                                collection.remove({gameCode: term.gameCode, termCode: term.termCode}, {safe: true}, function () {
                                                    log.error('已将未中奖票全部放入历史库');
                                                    termCallBack(null);
                                                })
                                            })
                                        });
                                    })

                                });
                            });
                        });
                    });
                }, function (err) {
                });
            },function(err){
                log.error('兑奖期次及票据处理已经全部完成');
            });
        })
    });

}, null, false, 'Asia/Chongqing');


BonusControl.prototype.bonusTickets = new CronJob('*/10 * * * * *', function () {
    log.error('*******兑奖****** 兑奖任务');
    async.waterfall([function (cb) {
        //查找用于兑奖的终端机
        for (var i = 0; i < terminalArray.length; i++) {
            if (terminalArray[i].status == terminalCons.terminal.status.bonus) {
                cb(null, terminalArray[i]);
            }
        }
        ;
    }, function (terminal, cb) {
        log.error(terminal.terminalId+'：开始扫描兑奖');
        mongoDBUtil.db.collection('TicketsWaitBonus', {safe: true}, function (err, collection) {
            var gameCodeArr = nodePlatCons.gamCodeArray;
            for (var i = 0; i < gameCodeArr.length; i++) {
                var gc = gameCodeArr[i];
                //todo 测试写死兑奖期次
                if (terminal.gameCode[gc]) {
                    collection.find({
                        status: terminalCons.ticket.status.in,
                        terminalId:terminal.terminalId,
                        gameCode: gc
                    }, {limit: 20}).toArray(function (err, tickets) {
                        if (tickets.length > 0) {
                            terminal.status = terminalCons.terminal.status.inBonus;
                            terminal.terminal.status = terminalCons.terminal.status.inBonus;
                            var msg = JSON.stringify(terminal.terminal);
                            log.error('有待兑奖票，已指定终端机' + terminal.terminalId + ' 兑奖中……');
                            webIo.io.emit('statusChange', msg);
                            var arr = new Array;
                            async.each(tickets, function (item, callback) {
                                if (terminal.gameCode[item.gameCode]) {
                                    var obj = item;
                                    if (item.gameCode == 'T53' || item.gameCode == 'T54' || item.gameCode == 'T55') {
                                        arr.push(obj);
                                        collection.findAndModify({'id': item.id}, {'id': -1}, {
                                            $set: {
                                                status: terminalCons.ticket.status.wait,
                                                bonusTerminal: terminal.terminalId
                                            }
                                        }, {new: true}, function (err, ticket) {
                                        })
                                    } else {
                                        arr.push(obj);
                                        collection.findAndModify({'id': item.id}, {'id': -1}, {
                                            $set: {
                                                status: terminalCons.ticket.status.wait,
                                                bonusTerminal: terminal.terminalId
                                            }
                                        }, {new: true}, function (err, ticket) {
                                        })
                                    }
                                }
                                callback(null);
                            }, function (err) {
                                cb(null, arr, terminal);
                            })
                        }
                    })
                }
            }
        });

    }, function (tickets, terminal, cb) {
        var _tickets = [];
        if (tickets.length == 0) {
            return;
        }
        for (var i = 0; i < tickets.length; i++) {
            var metaData = {};
            metaData.metaTicket = tickets[i].ticketSeq + ' ' + tickets[i].ticketPwd2 + '\n';
            _tickets.push(metaData);
        }
        var headNode = {cmd: '0007', sequenceId: uuid.v4().replace(/\-/g, ''), terminalId: terminal.terminalId};
        var bodyNode = {tickets: _tickets, metaTicketName: tickets[0].metaTicketName};
        terminal.terminalControl.send0007(headNode, bodyNode);
        cb(null);
    }], function (err, result) {
        if (err) {
            log.info('err: ', err); // -> null
            log.info('result: ', result); // -> 16
        }
    })
}, null, false, 'Asia/Chongqing');


BonusControl.prototype.dealWithBonus = new CronJob('*/30 * * * * *', function () {
    log.error("*******兑奖****** 处理开奖期次统计");
    mongoDBUtil.db.collection('TerminalPrintSuccess', {safe: true}, function (err, collection) {
        collection.aggregate({$project: {gameCode: 1, termCode: 1}}, {
            $group: {
                _id: {gameCode: "$gameCode", termCode: "$termCode"}
            }
        }, function (err, res) {
            if (!err) {
                async.waterfall([function (cb) {
                    for (var i = 0; i < res.length; i++) {
                        var gameCode = res[i]._id.gameCode;
                        var termCode = res[i]._id.termCode;
                        var bodyNode = {
                            cond: {
                                gameCode: gameCode,
                                code: termCode
                            },
                            sort: {},
                            skip: 0,
                            limit: 20
                        };
                        cb(null, bodyNode);
                    }
                }, function (bodyNode, cb) {
                    nodePlatAssist.sentCQ01(bodyNode, function (err, backMsgNode) {
                        if (!err) {
                            var bodyObject = JSON.parse(backMsgNode.body);
                            if (bodyObject.rst.length > 0) {
                                var term = bodyObject.rst[0];
                                if (term.status == nodePlatCons.term.status.bonus) {
                                    var bonusTerm = {
                                        gameCode: term.gameCode,
                                        termCode: term.code,
                                        status: 1100 //等待兑奖
                                    };
                                    mongoDBUtil.db.collection('WaitBonusTerms', {safe: true}, function (err, waitBonusTerms) {
                                        waitBonusTerms.findOne({gameCode: bonusTerm.gameCode, termCode: bonusTerm.termCode}, function (err, term) {
                                            if (!term) {
                                                waitBonusTerms.insert(bonusTerm, function (err) {
                                                    if (!err) {
                                                        log.info(JSON.stringify(bonusTerm) + '已经等待兑奖');
                                                    }
                                                })
                                            }
                                        });
                                    });
                                }
                            }
                        }
                        ;
                    });
                }], function (err) {
                });
            }
        })
    });
}, null, false, 'Asia/Chongqing');


var bonusControl = new BonusControl();
module.exports = bonusControl;
