/**
 * Created by w44 on 15-3-5.
 */

var CronJob = require("cron").CronJob;
var async=require('async');

var cons = require('print_constants');
var terminalCons = cons.terminalCons;

var util = require('print_util');
var mongoDBUtil = util.mongoDBUtil;
var log = util.log;

var memory = require('print_memory');
var terminalArray = memory.terminalArray;

var fs = require('fs');
var moment=require('moment');

var BonusControl = function () {
};


/**
 * 根据终端机id兑奖
 * @param terminalId
 * 1.从数组中获取终端机对象
 * 2.从数据库中获取所有票
 * 3.发送请求
 */

BonusControl.prototype.run = function () {

    log.error('兑奖任务开始');

    new CronJob('*/5 * * * * *', function () {
        async.waterfall([function (cb) {
            //查找用于兑奖的终端机
            for (var i = 0; i < terminalArray.length; i++) {
                if (terminalArray[i].status == terminalCons.terminal.status.bonus) {
                    cb(null, terminalArray[i]);
                }
            }
            log.error('无终端机');
        }, function (terminal, cb) {
            log.info(terminal.terminalId + '开始执行兑奖任务');
            cb(null, terminal.terminalId);
        }, function (terminalId, cb) {
            for (var i = 0; i < terminalArray.length; i++) {
                if (terminalId == terminalArray[i].terminalId && terminalArray[i].status == terminalCons.terminal.status.bonus) {
                    terminalArray[i].status = terminalCons.terminal.status.inBonus;
                    cb(null, terminalArray[i]);
                }
            }
        }, function (terminal, cb) {
            mongoDBUtil.db.collection('TerminalPrintSuccess', {safe: true}, function (err, collection) {
                var gameCodeArr = terminalCons.gamCodeArray;
                var _term = termUtil.bonusTerm();
                var term = termUtil.term();
                for (var i = 0; i < gameCodeArr.length; i++) {
                    var gc = gameCodeArr[i];
                    //todo 测试写死兑奖期次
                    if (terminal.gameCode[gc]) {
                        collection.find({
                            status: terminalCons.ticket.status.in,
                            gameCode: gc,
                            termCode: {
                                $ne: '15007'
                            }
                        }, {limit: 20}).toArray(function (err, tickets) {
                            if (tickets.length > 0) {
                                var arr = new Array;
                                async.each(tickets, function (item, callback) {
                                    if (terminal.gameCode[item.gameCode]) {
                                        var obj = item;
                                        //首先判断是否为11选5
                                        if (term[obj.gameCode]) {
                                            var ticketTerm = parseInt(obj.termCode);
                                            if (item.gameCode == 'T53' || item.gameCode == 'T54' || item.gameCode == 'T55') {
                                                if (ticketTerm <= _term[obj.gameCode]) {
                                                    arr.push(obj);
                                                    collection.findAndModify({'id': item.id}, {'id': -1}, {
                                                        $set: {
                                                            status: terminalCons.ticket.status.wait,
                                                            bonusTerminal: terminal.terminalId
                                                        }
                                                    }, {new: true}, function (err, ticket) {
                                                    })
                                                }
                                            } else {
                                                if (ticketTerm <= term[obj.gameCode]) {
                                                    arr.push(obj);
                                                    collection.findAndModify({'id': item.id}, {'id': -1}, {
                                                        $set: {
                                                            status: terminalCons.ticket.status.wait,
                                                            bonusTerminal: terminal.terminalId
                                                        }
                                                    }, {new: true}, function (err, ticket) {
                                                    })
                                                }
                                            }
                                        }
                                    }
                                    callback(null);
                                }, function (err) {
                                    cb(null, arr, terminal);
                                })
                            }
                        })
                    }
                }
            });
        }, function (tickets, terminal, cb) {
            var _tickets = [];
            if (tickets.length == 0) {
                return;
            }
            for (var i = 0; i < tickets.length; i++) {
                var metaData = {};
                metaData.metaTicket = tickets[i].ticketSeq + ' ' + tickets[i].ticketPwd2 + '\n';
                _tickets.push(metaData);
            }
            var headNode = {cmd: '0007', sequenceId: uuid.v4().replace(/\-/g, ''), terminalId: terminal.terminalId};
            var bodyNode = {tickets: _tickets, metaTicketName: tickets[0].metaTicketName};
            terminal.terminalControl.send0007(headNode, bodyNode);
            cb(null);
        }], function (err, result) {
            if (err) {
                log.info('err: ', err); // -> null
                log.info('result: ', result); // -> 16
            }
        })
    }, null, true, 'Asia/Chongqing');

    new CronJob('0 0 */1 * * *', function () {
        log.error('成功票更新');
        mongoDBUtil.db.collection('TerminalPrintSuccess', {safe: true}, function (err, collection) {
            collection.update({status: terminalCons.ticket.status.wait}, {$set: {status: terminalCons.ticket.status.in}}, {multi: true}, function () {
                log.info('已更新状态');
            })
        })
    }, null, true, 'Asia/Chongqing');

    new CronJob('0 0 3 * * *', function () {
        log.error('ftp任务');
        var now = new Date().getTime();
        var name = 'print_' + moment().format('YYYY_MM_DD.txt');
        mongoDBUtil.db.collection('TerminalPrintSuccess', {safe: true}, function (err, collection) {
            mongoDBUtil.db.collection('History', {safe: true}, function (err, coll) {
                mongoDBUtil.db.collection('wrongTicket', {safe: true}, function (err, wrong) {
                    fs.readFile(terminalCons.ftpTicketFileDir + name, 'UTF-8', function (err, data) {
                        if (!err) {
                            var arr = data.split('\n');
                            async.each(arr, function (item, callback) {
                                try {
                                    if (item.trim() != '') {
                                        //todo 此处应判断当前库中是否有这张票,然后再做进一步操作
                                        var obj = JSON.parse(item);
                                        if (obj.bonus < 1) {
                                            //奖金零,移入历史库
                                            collection.findAndRemove({id: obj.id}, [], function (err, ticket) {
                                                if (ticket) {
                                                    delete ticket['_id'];
                                                    ticket.bonus = obj.bonus;
                                                    ticket.bonusCount = 0;
                                                    ticket.bonusTime = now;
                                                    coll.insert(ticket, function () {
                                                        log.info(ticket.id + '已进入历史库')
                                                    });

                                                } else {
                                                    //找不到票,到历史库中找
                                                    coll.findOne({id: obj.id}, function (err, _tic) {
                                                        if (!_tic) {
                                                            //todo 找不到文件,入错票库
                                                            wrong.insert(obj, function () {
                                                                log.info('找不到' + obj.id);
                                                            })
                                                        } else {
                                                            log.info(obj.id + '已兑过奖!');
                                                        }
                                                    })
                                                }
                                            })
                                        } else {
                                            //奖金不为0,不做任何操作
                                        }
                                    }
                                } catch (err) {
                                    log.info('已出错');
                                    log.info(item);
                                }
                                callback(null)
                            }, function (err) {

                            })
                        }
                    });
                });
            });
        });
    }, null, true, 'Asia/Chongqing');
};


var bonusControl = new BonusControl();
module.exports = bonusControl;