/**
 * Created by obzerg on 14-10-16.
 */
var http = require('http');
var CronJob = require("cron").CronJob;
var moment = require('moment');
var db = require('../../mcp_modules/MongoUtil');
var async = require('async');
var logger = require('../../mcp_modules/logger');

var io = require('../../WebServer').io;
var prop = require('../config/Prop.js');
var platform = require("./PlatInterUtil");
var TermUtil = function () {

};
//注意,程序刚启动时需要初始化term对象
TermUtil.prototype.T05Term = '';
TermUtil.prototype.T01Term = '';
TermUtil.prototype.T02Term = '';
TermUtil.prototype.T03Term = '';
TermUtil.prototype.T04Term = '';
TermUtil.prototype.T06Term = '';
TermUtil.prototype.T53Term = '';
TermUtil.prototype.T54Term = '';
TermUtil.prototype.T55Term = '';


//兑奖用期次
TermUtil.prototype.T05BonusTerm = '';
TermUtil.prototype.T01BonusTerm = '';
TermUtil.prototype.T02BonusTerm = '';
TermUtil.prototype.T03BonusTerm = '';
TermUtil.prototype.T04BonusTerm = '';
TermUtil.prototype.T06BonusTerm = '';
TermUtil.prototype.T53BonusTerm = '';
TermUtil.prototype.T54BonusTerm = '';
TermUtil.prototype.T55BonusTerm = '';

//足彩在售期次
TermUtil.prototype.T53SellTerm = {};
TermUtil.prototype.T54SellTerm = {};
TermUtil.prototype.T55SellTerm = {};


TermUtil.prototype.T01TermEndTime = '';
TermUtil.prototype.T02TermEndTime = '';
TermUtil.prototype.T03TermEndTime = '';
TermUtil.prototype.T04TermEndTime = '';
TermUtil.prototype.T05TermEndTime = '';
TermUtil.prototype.T06TermEndTime = '';
TermUtil.prototype.T53TermEndTime = '';
TermUtil.prototype.T54TermEndTime = '';
TermUtil.prototype.T55TermEndTime = '';

//高频期次对象
TermUtil.prototype.Terms = {};


TermUtil.prototype.term = function () {
    return {
        T05: TermUtil.prototype.T05Term,
        T01: TermUtil.prototype.T01Term,
        T02: TermUtil.prototype.T02Term,
        T03: TermUtil.prototype.T03Term,
        T04: TermUtil.prototype.T04Term,
        T06: TermUtil.prototype.T06Term,
        T53: TermUtil.prototype.T53Term,
        T54: TermUtil.prototype.T54Term,
        T55: TermUtil.prototype.T55Term
    }
};

TermUtil.prototype.bonusTerm = function () {
    return {
        T05: TermUtil.prototype.T05BonusTerm,
        T01: TermUtil.prototype.T01BonusTerm,
        T02: TermUtil.prototype.T02BonusTerm,
        T03: TermUtil.prototype.T03BonusTerm,
        T04: TermUtil.prototype.T04BonusTerm,
        T06: TermUtil.prototype.T06BonusTerm,
        T53: TermUtil.prototype.T53BonusTerm,
        T54: TermUtil.prototype.T54BonusTerm,
        T55: TermUtil.prototype.T55BonusTerm
    }
};

TermUtil.prototype.zcSellTerm = function () {
    return {
        T53: TermUtil.prototype.T53SellTerm,
        T54: TermUtil.prototype.T54SellTerm,
        T55: TermUtil.prototype.T55SellTerm
    }
};


TermUtil.prototype.termEndTime = function () {
    return {
        T05: {
            termCode: TermUtil.prototype.T05Term,
            endTime: TermUtil.prototype.T05TermEndTime
        }, T01: {
            termCode: TermUtil.prototype.T01Term,
            endTime: TermUtil.prototype.T01TermEndTime
        }, T02: {
            termCode: TermUtil.prototype.T02Term,
            endTime: TermUtil.prototype.T02TermEndTime
        }, T03: {
            termCode: TermUtil.prototype.T03Term,
            endTime: TermUtil.prototype.T03TermEndTime
        }, T04: {
            termCode: TermUtil.prototype.T04Term,
            endTime: TermUtil.prototype.T04TermEndTime
        }, T06: {
            termCode: TermUtil.prototype.T06Term,
            endTime: TermUtil.prototype.T06TermEndTime
        }, T53: {
            termCode: TermUtil.prototype.T53Term,
            endTime: TermUtil.prototype.T53TermEndTime
        }, T54: {
            termCode: TermUtil.prototype.T54Term,
            endTime: TermUtil.prototype.T54TermEndTime
        }, T55: {
            termCode: TermUtil.prototype.T55Term,
            endTime: TermUtil.prototype.T55TermEndTime
        }
    }
};


TermUtil.prototype.run = function () {
    var self = this;
    //每隔5分钟从平台取一次期次数据
    self.termInfo.start();
    self.task.start();
    self.gpTerm.start();
    self.getTerm();

    //self.gpTermExc();

};


TermUtil.prototype.task = new CronJob('0 */5 8-21 * * *', function () {
    TermUtil.prototype.getTerm();
}, null, true, 'Asia/Chongqing');


TermUtil.prototype.T06Task = new CronJob('0 7,17,27,37,47,57 8-22 * * *', function () {

}, null, true, 'Asia/Chongqing');


TermUtil.prototype.getTerm = function () {
    if (prop.mode == 'test') {
        var body = {
            cond: {gameCode: {$in: ['T01', 'T02', 'T03', 'T04', 'T05', 'T06']}, status: 1200}
        };
    } else if (prop.mode == 'run') {
        var body = {
            type: '4',
            terms: [
                {gameCode: 'T01'},
                {gameCode: 'T02'},
                {gameCode: 'T03'},
                {gameCode: 'T04'},
                {gameCode: 'T05'},
                {gameCode: 'T53'},
                {gameCode: 'T54'},
                {gameCode: 'T55'}
            ]
        };

        var body4Bonus = {
            type: '2'
        }
    }

    platform.get(prop.platform.site.key, prop.platform.command.queryTerm, body, prop.platform.site.channelCode, function (err, body) {
        if (err) {
            TermUtil.prototype.getTerm();
        } else {
            var T53 = 0;
            var T54 = 0;
            var T55 = 0;
            TermUtil.prototype.T53SellTerm = {};
            TermUtil.prototype.T54SellTerm = {};
            TermUtil.prototype.T55SellTerm = {};
            var _body = JSON.parse(body.body);
            var termArr = _body.rst;
            async.each(termArr, function (item, callback) {
                if (item.gameCode == 'T01') {
                    TermUtil.prototype.T01Term = parseInt(item.code);
                    TermUtil.prototype.T01TermEndTime = moment(item.endTime).valueOf()
                } else if (item.gameCode == 'T02') {
                    TermUtil.prototype.T02Term = parseInt(item.code);
                    TermUtil.prototype.T02TermEndTime = moment(item.endTime).valueOf()
                } else if (item.gameCode == 'T03') {
                    TermUtil.prototype.T03Term = parseInt(item.code);
                    TermUtil.prototype.T03TermEndTime = moment(item.endTime).valueOf()
                } else if (item.gameCode == 'T04') {
                    TermUtil.prototype.T04Term = parseInt(item.code);
                    TermUtil.prototype.T04TermEndTime = moment(item.endTime).valueOf()
                }
                //else if (item.gameCode == 'T05') {
                //    TermUtil.prototype.T05Term = parseInt(item.code);
                //    TermUtil.prototype.T05TermEndTime = moment(item.endTime).valueOf();
                //    var term = {};
                //    term[item.code] = moment(item.endTime).format('YYMMDDHHmmss');
                //    TermUtil.prototype.Terms['T05'] = term;
                //
                //    //查询T05期次
                //    var arr = [item.code, item.nextCode];
                //    TermUtil.prototype.getTerms('T05', arr);
                //
                //} else if (item.gameCode == 'T06') {
                //    TermUtil.prototype.T06Term = parseInt(item.code);
                //    TermUtil.prototype.T06TermEndTime = moment(item.endTime).valueOf();
                //
                //    var term = {};
                //    term[item.code] = moment(item.endTime).format('YYMMDDHHmmss');
                //    TermUtil.prototype.Terms['T06'] = term;
                //
                //    //查询T06期次
                //    var arr = [item.code, item.nextCode];
                //    TermUtil.prototype.getTerms('T05', arr);
                //}
                else if (item.gameCode == 'T53') {
                    TermUtil.prototype.T53Term = parseInt(item.code);
                    TermUtil.prototype.T53TermEndTime = moment(item.endTime).valueOf()

                    //往数组里push
                    T53++;
                    TermUtil.prototype.T53SellTerm[item.code] = {
                        termCode: item.code,
                        index: T53
                    };
                } else if (item.gameCode == 'T54') {
                    TermUtil.prototype.T54Term = parseInt(item.code);
                    TermUtil.prototype.T54TermEndTime = moment(item.endTime).valueOf()

                    T54++;
                    TermUtil.prototype.T54SellTerm[item.code] = {
                        termCode: item.code,
                        index: T54
                    };
                } else if (item.gameCode == 'T55') {
                    TermUtil.prototype.T55Term = parseInt(item.code);
                    TermUtil.prototype.T55TermEndTime = moment(item.endTime).valueOf()

                    T55++;
                    TermUtil.prototype.T55SellTerm[item.code] = {
                        termCode: item.code,
                        index: T55
                    };
                }
                //callback();
            }, function (err) {
                //if (TermUtil.prototype.T53Term == '' || TermUtil.prototype.T05Term == '' || TermUtil.prototype.T01Term == '' || TermUtil.prototype.T02Term || TermUtil.prototype.T03Term == '' || TermUtil.prototype.T04Term == '' || TermUtil.prototype.T06Term == '') {
                //    TermUtil.prototype.getTerm();
                //}
            })
        }
    });
    if (prop.mode == 'run') {
        platform.get(prop.platform.site.key, prop.platform.command.queryTerm, body4Bonus, prop.platform.site.channelCode, function (err, body) {
            if (err) {
                TermUtil.prototype.getTerm();
            } else {
                var _body = JSON.parse(body.body);
                var termArr = _body.rst;
                async.each(termArr, function (item, callback) {
                    if (item.gameCode == 'T01') {
                        TermUtil.prototype.T01BonusTerm = parseInt(item.code);
                    } else if (item.gameCode == 'T02') {
                        TermUtil.prototype.T02BonusTerm = parseInt(item.code);
                    } else if (item.gameCode == 'T03') {
                        TermUtil.prototype.T03BonusTerm = parseInt(item.code);
                    } else if (item.gameCode == 'T04') {
                        TermUtil.prototype.T04BonusTerm = parseInt(item.code);
                    } else if (item.gameCode == 'T05') {
                        TermUtil.prototype.T05BonusTerm = parseInt(item.code);
                    } else if (item.gameCode == 'T06') {
                        TermUtil.prototype.T06BonusTerm = parseInt(item.code);
                    } else if (item.gameCode == 'T53') {
                        TermUtil.prototype.T53BonusTerm = parseInt(item.code);
                    } else if (item.gameCode == 'T54') {
                        TermUtil.prototype.T54BonusTerm = parseInt(item.code);
                    } else if (item.gameCode == 'T55') {
                        TermUtil.prototype.T55BonusTerm = parseInt(item.code);
                    }
                    //callback();
                }, function (err) {
                    //if (TermUtil.prototype.T53Term == '' || TermUtil.prototype.T05Term == '' || TermUtil.prototype.T01Term == '' || TermUtil.prototype.T02Term || TermUtil.prototype.T03Term == '' || TermUtil.prototype.T04Term == '' || TermUtil.prototype.T06Term == '') {
                    //    TermUtil.prototype.getTerm();
                    //}
                })
            }
        });
    }
};

TermUtil.prototype.gpTerm = new CronJob('*/10 * * * * *', function () {
    TermUtil.prototype.gpTermExc();

}, function () {
}, true, 'Asia/Chongqing');

TermUtil.prototype.gpTermExc = function () {
    TermUtil.prototype.queryLocalTerm('T05', function (item) {
        TermUtil.prototype.T05Term = parseInt(item.code);
        TermUtil.prototype.T05TermEndTime = moment(item.endTime).valueOf();
        var term = {};
        term[item.code] = moment(item.endTime).format('YYMMDDHHmmss');
        TermUtil.prototype.Terms['T05'] = term;
    });

    TermUtil.prototype.queryLocalTerm('T06', function (item) {
        TermUtil.prototype.T06Term = parseInt(item.code);
        TermUtil.prototype.T06TermEndTime = moment(item.endTime).valueOf();
        var term = {};
        term[item.code] = moment(item.endTime).format('YYMMDDHHmmss');
        TermUtil.prototype.Terms['T06'] = term;
    });
};

TermUtil.prototype.queryLocalTerm = function (gameCode, cb) {
    db.collection('localTerm', {safe: true}, function (err, coll) {
        var nowTime = moment().valueOf();
        coll.findOne({gameCode: gameCode, openTime: {$lt: nowTime}, endTime: {$gt: nowTime}}, function (err, term) {
            if (!err) {
                cb(term);
            } else {
                console.log(err);
            }
        })
    })
};


//每隔1分钟向界面通知一次期次相关情况
TermUtil.prototype.termInfo = new CronJob('0 */1 * * * *', function () {
    //logger.info('--在售期次--');
    //logger.info(TermUtil.prototype.term());
    //logger.info('--兑奖期次');
    //logger.info(TermUtil.prototype.bonusTerm());
    //logger.info('--足彩在售期次--');
    //logger.info(TermUtil.prototype.zcSellTerm());
    logger.info('----高频相关信息----');
    logger.info(TermUtil.prototype.Terms);


    db.collection('TerminalPrintSuccess', {safe: true}, function (err, collection) {
        var gameCodeArr = prop.gamCodeArray;
        var termInfo = [];
        var termCode = TermUtil.prototype.bonusTerm();
        var tc = TermUtil.prototype.term();
        async.eachSeries(gameCodeArr, function (item, callback) {
            collection.aggregate({$match: {gameCode: item}}, {
                $group: {
                    _id: '$termCode',
                    totalMoney: {$sum: '$amount'},
                    count: {$sum: 1}
                }
            }, function (err, result) {

                for (var i = 0; i < result.length; i++) {
                    var obj = result[i];
                    obj.gameCode = item;
                    obj.termCode = obj['_id'];
                    var thisTermCode = parseInt(obj.termCode);

                    if (item != 'T53' && item && 'T54' && item != 'T55') {
                        if (thisTermCode < tc[item]) {
                            obj.status = '处理中';
                        } else {
                            //等于当前期次,属于正在销售的期次
                            obj.status = '销售中'
                        }
                        termInfo.push(obj);
                    }else{
                        if (thisTermCode <= termCode[item]) {
                            obj.status = '处理中';
                        } else {
                            //等于当前期次,属于正在销售的期次
                            obj.status = '销售中'
                        }
                        termInfo.push(obj);
                    }

                }
                callback(null);
            })

        }, function (err) {
            io.emit('TerminalPrintSuccessTerm', termInfo);
        })
    })
}, null, true, 'Asia/Chongqing');


TermUtil.prototype.getT06CurTerm = function (cb) {
    var para = 'method=R2V0U2VydmVyVGltZQ%3D%3D&LotteryId=ODE%3D';
    var options = {
        host: 'www.hn481.com',
        path: '/Handler/BetHandler.ashx',
        method: 'post',
        headers: {
            'Content-Length': para.length,
            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
        }
    };


    var req = http.request(options, function (res) {
        res.setEncoding("utf8");
        var resData = "";
        res.on("data", function (data) {
            resData += data;
        });

        res.on("end", function () {
            var obj = JSON.parse(resData);
            cb(obj.curNumber)
        });
    });

    req.write(para);
    req.end();
};

TermUtil.prototype.getTerms = function (gameCode, arr) {
    var terms = [];
    for (var i = 0; i < arr.length; i++) {
        var obj = {
            gameCode: gameCode,
            termCode: arr[i]
        };
        terms.push(obj)
    }
    var body = {
        type: '0',
        terms: terms
    };
    platform.get(prop.platform.site.key, prop.platform.command.queryTerm, body, prop.platform.site.channelCode, function (err, body) {
        if (err) {
            logger.info(err);
        } else {
            var obj = JSON.parse(body.body);
            if (obj.rst.length > 0) {
                var term = {};
                for (var i = 0; i < obj.rst.length; i++) {
                    var item = obj.rst[i];
                    term[item.code] = moment(item.endTime).format('YYMMDDHHmmss');
                }
                TermUtil.prototype.Terms[gameCode] = term;
            }
        }
    });
};

var termUtil = new TermUtil();
module.exports = termUtil;